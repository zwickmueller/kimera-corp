@for $i from 1 through 8 {
  .project-width-#{$i},
  .grid-width-#{$i} {
    width: 100%;
    flex-basis: calc(100% / 8 *#{$i} - var(--kimera-grid-gap) / 2);
    max-width: calc(100% / 8 *#{$i} - var(--kimera-grid-gap) / 2);
    //was 8px
    @include until($tablet) {
      flex-basis: 100%;
      max-width: 100%;
    }
  }
}

$aspect-ratios: (
  1: calc(16 / 16),
  2: calc(16 / 12),
  3: calc(16 / 9),
  4: calc(16 / 8),
  5: calc(16 / 7),
  6: calc(16 / 6),
  7: calc(16 / 5),
  8: calc(16 / 4),
);
@each $n, $ratio in $aspect-ratios {
  .kimera-typetester.grid-width-#{$n} {
    aspect-ratio: $ratio;
    @include until($tablet) {
      aspect-ratio: 1 / 0.9;
    }
  }
}

.padding-top-s {
  padding-top: var(--kimera-small-gap);
}
.padding-top-m {
  padding-top: 1rem;
}
.padding-top-l {
  padding-top: 2rem;
}
.padding-bottom-s {
  padding-bottom: var(--kimera-small-gap);
}
.padding-bottom-m {
  padding-bottom: 1rem;
}
.padding-bottom-l {
  padding-bottom: 2rem;
}

// WEIRD: calc(var(--kimera-grid-gap) * -1 / 2) throws an error on npm run generate. Order of operations seem to be the issue.
.kimera-container.container-full-width-mobile {
  @include until($tablet) {
    width: 100vw;
    padding: 0;

    //   margin-left: calc(-1 * var(--kimera-grid-gap) / 2) !important;
    //   margin-right: calc(-1 * var(--kimera-grid-gap) / 2) !important;
    //   width: 100vw !important;
    // }
  }
}

.grid-width-half-mobile {
  @include until($tablet) {
    flex-basis: calc(100% / 2 - var(--kimera-grid-gap) / 4);
    max-width: calc(100% / 2 - var(--kimera-grid-gap) / 4);
  }
}
.flex-spacer {
  flex-grow: 1;
  flex-basis: 0;
}

.kimera-flex-grid {
  height: 100%;
  column-gap: calc(var(--kimera-grid-gap) / 2);
  row-gap: var(--kimera-grid-row-gap);
  // column-gap: var(--kimera-grid-gap);
  // row-gap: var(--kimera-grid-row-gap);
  padding-left: var(--kimera-side-padding);
  padding-right: calc(
    var(--kimera-side-padding) - (var(--kimera-grid-gap) / 2)
  );
  @include until($tablet) {
    padding-right: var(--kimera-side-padding);
  }
  // grid-template-columns: repeat(8, 1fr);
  position: relative;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  // min-height: 65em;
  align-content: flex-start;
}

.products .kimera-flex-grid {
  padding-right: calc(var(--kimera-side-padding) - 2em);
  @include until($tablet) {
    padding-right: var(--kimera-side-padding);
  }
}
.project .kimera-flex-grid {
  gap: calc(var(--kimera-grid-gap) / 2);
  @include until($tablet) {
    padding: 0;
    // padding-right: var(--kimera-side-padding);
  }
  // grid-row-gap: var(--kimera-grid-gap);
}

.slider .slide {
  pointer-events: none;
}

.stop-anim picture {
  transition: none !important;
}
.slider {
  .a {
    height: 100%;
    width: 100%;
  }
  height: 100%;
  width: 100%;
  .slide {
    * {
      pointer-events: none;
      // pointer-events: none;
      user-select: none;
    }

    picture {
      transition: all 0.5s ease;
      transform: scale(1.3);
    }
    overflow: hidden;
    &.active-slide picture {
      transform: scale(1);
    }
    // height: 100%;
    background: var(--kimera-grey);
    // height: inherit;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    max-width: 100vw;
    pointer-events: all;
  }
  .flicking-viewport {
    height: 100% !important;
  }
}
